'''initdataNov импортирует из jeamodNov
Все переменные и рассчеты проводятся тут'''
from jeamodNov import *
z=print 
info_project()

def zloc(*args):
    '''Более усовершенствованная версия zlocdb:
    zloc('Ku','zo','yp'). Используем тут, т.к. базы данных
    должны быть в области видимости'''           
    arg=list(args)
    for _ in args:
        for x in [db, nb]: # базы данных должны быть в области видимости
            if _ in x:
                z(_, x[_][0], x[_][1], sep=' : ')
                arg.remove(_)
    if len(arg)>0:
        z('---!!!--Переменная {} не найдена в основных базах данных!!!----'\
          .format(arg))
        
#создаем пустые базы данных всех переменных
db, nb = {}, {} ; k = key = 0 ; v = val = 1 # k : key-description ; v : variable_value
z('\nПункты проекта:\n')
z('''
#=================================================
#                     3. Технические решения
#            3.1 Проектн. мощн и режим работы карьера
#=================================================
''')

gpk = idb( 'gpk', 'Годовая производительность карьера, куб.м./год' , 115000 ,db)
# из техзадания
bz = idb( 'bz' , 'Разведаннные Балансовые? запасы, куб. м.', 47377 , db )
# из техзадания
go = idb( 'go' , 'Площадь горного отвода, кв.м. ' , 34844, db )
zo = idb( 'zo' , 'Площадь земельного отвода,  кв.м. ', 34844 , db )
Kp = idb( 'Kp' , 'Коэффициент крепости по Протодьяконову', 0.5 , db )
krd = idb('krd' , 'Количество рабочих дней в году', kol_rab_dn(5,10), db )
#  с какого по какой месяц включительно
ps = idb( 'ps' , 'Продолжительность смены,ч' , 8 , db )
rn = idb( 'rn' , 'Продолжительность рабочей недели, дн', 5, db)

zlocdb( db, [ 'gpk','bz','go','zo','Kp','krd','ps','rn' ] )

z('Остальное в теле проекта')
sms='\nРассчетные данные:\n\
должны получить значения следующих переменных для таблицы2:\n\
\Vizvlek = Извлекаемые запасы, куб.м.\n\
\n\
Kv = Коэффициент вскрыши\n\
\n\
age = Срок эксплуатации карьера, лет\
'
z(sms)

z('\n3.2 Вскрытие и порядок отработки поля карьера\
    \n3.2.1 Порядок отработки--------------------------------------------------------')

kvs = idb( 'kvs' , 'Объем ковша экскаватора, куб.м.', 1.0, db)
prs = idb( 'prs', ' Средняя мощность подуступа ПРС, м.', 0.09, db)
kamgr = idb( 'kamgr', 'Грузоподъемность а/с, кг', 19000, db)

zlocdb( db, [ 'kvs', 'prs', 'kamgr' ] )
z('Согласно техническому заданию ежегодный объем добычи \
\nсоставляет {} тыс. м3.'.format(gpk/1000))
z('Изменить, что есть красным цветом')

z('\n3.2.2 Вскрытие поля карьера-----------------------------------------------------')
z('Откорректировано в теле.')

z('\n3.3 Система разработки\n3.3.1 Общие сведения------------------------------------')
z('Откорректировано в теле.')

z('\n3.3.2 Выбор системы разработки-----------------------------------------------')

vdp = idb('vdp','Водоприток в сутки (min,max), куб.м.', [52.4, 79.75],db)

zlocdb( db, ['Kp', 'vdp'] )
z('Остальное откорректировано в теле проекта.')

z('\n3.3.3 Рассчет основных параметров. Элементы системы разработки---------')

uro = idb( 'uro', 'Угол рабочего откоса сухого уступа песка, градусы', 50, db)
ueo = idb( 'ueo', 'Угол естественного откоса уступа песка, градусы', 40, db)

zlocdb( db, [ 'uro','ueo' ] )

z('Дооформить таблицу 3 - Параметры уступов')

z('\nОбоснование безопасной работы экскаватора на уступе---------------------')
z('Расчет предельной высоты уступа и глубины черпания произведен \n\
графически с учетом траектории движения ковша(Скорректировать красн.)')

Hch = idb( 'Hch', 'Максимальная высота черпания/копания экскаватора', 9.95, db)
Hk = idb( 'Hk', 'Максимальная глубина копания/черпания экскаватора', 6.50, db)
Hvig = idb( 'Hvig', ' Максимальная высота выгрузки экскаватора', 6.99,db )
Rk = idb('Rk', 'Максимальный радиус черпания/копания экскаватора', 9.88, db)
Rka = idb('Rka', 'Макс. радиус черпания на уровне опорной поверхности', 9.69, db)

zlocdb( db, [ 'Hch', 'Hk', 'Hvig', 'Rk', 'Rka' ] )

z('\nВставляем Рис.2 Схема обоснования безопасной глубины для экскаватора')
z('\nРассчет ширины рабочих площадок------------------------------------------')

A = idb('A', 'Ширина заходки экскаватора(принята в п3.3.3.),м', 14, nb)
Pp = idb('Pp', 'Ширина проезжей части,м', 4, db)
Po = idb( 'Po','Ширина обочины с нагорной стороны',1.5,db)

z('Таблицы 4 и 5 откорректированы в теле')

z('\nРасчет призмы обрушения вскрышного уступа-------------------------------')

Hv = idb('Hv', 'Максимальная высота вскрышного уступа ПРС,м', 0.2, db)
Hd = idb('Hd', 'Максимальная высота добычного уступа ПРС,м', 2.75, db)

z('\nРасчет ширины рабочих площадок экскаватора-------------------------------')

Povu=idb('Povu','Призма обрушения вскрышного уступа,м', prizma(ueo,uro,Hv), nb)
Podu=idb('Podu','Призма обрушения добычного уступа,м', prizma(ueo,uro,Hd), nb)
Shv=idb('Shv','Ширина рабочей площадки экскаватора \
при отработке вскрышного уступа,м', (A+Pp+Po+Povu), nb)
Shd=idb('Shd','Ширина рабочей площадки экскаватора \
при отработке добычного уступа,м', (A+Pp+Po+Podu), nb)

zlocdb(db, [ 'Hv'] ) ;  zlocdb(nb, [ 'Povu'])
zlocdb(db, [ 'Hd'] ) ;  zlocdb(nb, [ 'Podu'])
zlocdb(nb, [ 'Shv', 'Shd'] ) 

z(' Перепронумеровать  все таблицы - некоторые были удалены.')
z(' Таблица 7 была удалена.')

z('\nРасчет ширины рабочих площадок погрузчика----------------------------------')

Rp = idb('Rp', 'Радиус поворота погрузчика ,м', 5.62, db)
Srp=idb('Srp','Ширина размещения/заходки погрузчика \
(равна экскаваторной) ',A ,db)
Soa=idb('Soa','Ширина обочины автодороги, м',1.5,db)
Sk=idb('Sk','Ширина кювета, м',1.5,db)
Hrp=idb('Hrp','Наибольшая высота разгрузки погрузчика(К,стр17pdf)',2.81,db)
Hcp=idb('Hcp','Максимальная высота черпания погрузчика(взято из отчета)',3.5,db)

Shp = idb('Shp','Рассчитаная Ширина рабочей площадки погрузчика', ( Srp+Pp+Soa+Sk), nb)

zlocdb(db, [ 'Rp', 'Srp', 'Soa',  'Sk' ,'Hrp','Hcp' ] )
zlocdb(nb, [ 'Shp'] )

z('\nТаблица 8 исправлена, Таблица 9 исправлена, \
Таблица 10 исправлена, Таблица 11 исправлена')
z('Откорректировать внешний вид таблиц , чтобы помещались')

z('\nАвтомобильный транспорт---------------------------------------------------------')

kam = idb('kam','Марка автосамосвала', 'KAMAZ-6522-43',db)
kamf = idb('kamf','Колесная формула а/с','6x6',db)
kamw = idb('kamw', 'Мощность двигателя а/с, кВт', 294, db)
kamm = idb('kamm', 'Масса полная а/с, кг', 33100, db)
# kamgr грузоподъемность описана выше в п3.2.1 Порядок отработки
kamvk = idb('kamvk', 'Геометрическая вместимость Объем кузова (платформы) а/с, куб.м.', 12, db)
kamr = idb('kamr', 'Радиус разворота а/с, м', 12.5, db)
kamv = idb('kamv', 'Скорость движения, км/час', 80, db)

zlocdb(db,[ 'kam', 'kamf', 'kamw', 'kamm', 'kamgr', 'kamvk', 'kamr', 'kamv' ])

z('\nПосле таблицы с характеристиками а/с вставить рис.3 - \
Схема к определению ширины проезжей части автодороги')
z('\nДалее считаем ширину проезжей части автодороги--------------------------')

#y = 0.5*x = 0.5+0.005*V   # - так в проекте. Сначала считаем 2е, потом 1е.

ac = idb('ac', 'Ширина кузова а/с по скатам', 2.5, db) 
V = idb('V', 'Скорость движения а/с по внутрикарьерным дорогам', 5, db)

yp = 0.5+0.005*V
yp = ((math.ceil( ( yp )*10))/10) # округляем вверх до десятых
yp = idb('yp', 'Рассчитанная Ширина предохранительной полосы между \
наружным колесом машины и кромкой проезжей части', yp, nb)

xb = yp/0.5
xb = idb( 'xb', 'Рассчитанный Безопасный зазор \
между встречными автосамосвалами', xb, nb)

Spc1 = ac+ 2*yp
Spc1 = math.ceil( Spc1 ) # округляем вверх до десятых
Spc1 = idb('Spc1', 'Рассчитанная Ширина проезжей части автодороги', Spc1, nb)

zlocdb(db, [ 'ac', 'V' ])
zlocdb(nb, [ 'yp','xb', 'Spc1' ])
z('\nПункт  исправлен в отчете.')

z('\nБульдозер на вскрышных и вспомогательных работах-------------------------')

lphb = idb( 'lphb', 'Длина поперечного хода бульдозера', 30, db)
Sop = idb( 'Sop', 'Ширина отвала ПРС', 12, db)

Shb = idb( 'Shb', 'Рассчитанная Ширина рабочей площадки бульдозера', ( lphb+Sop ),nb)

zlocdb(db, [ 'lphb', 'Sop' ] )
zlocdb(nb, [ 'Shb' ] )
z('\nПункт исправлен в отчете.')

z('\n3.4 Буровзрывные работы-----------------------------------------------------------')
z('Их нет, пункт исправлен в отчете.')

z('\n3.5. Оборудование, машины и механизмы \
\nдля вскрышных и добычных работ--------------------------------------------')
z('Рассчет производительности экскаватора :')
z('\nИсправить в тексте красным:\nСогласно лицензии и технического задания \
(приложения 2,3)  годовой объем добычи составляет {} тыс. м3.\n'.format(gpk))

tsm = idb( 'tsm', 'Продолжительность смены, мин', 60*ps, nb)
tpz = idb( 'tpz', 'Время на выполнение \
подготовительно-заключительных операций, мин', 35, db)
tln = idb( 'tln', 'Время на личные надобности(уточнить,сколько), мин', 10, db )
y = idb( 'y', 'Объемный вес в целике грунта(сырья) с влажностью 4.5%, т/куб.м', 1.61, db)
yy = idb( 'yy', 'Объемный вес в рыхлом виде грунта(сырья) с влажностью 4.5%, т/куб.м',1.365,db)
Kr = idb( 'Kr','Коэффициент разрыхления песка', round(y/yy, 2),db)

Qk = kvs*1/Kr 
Qk = idb('Qk', 'Объем горной массы в целике в одном ковше, куб.м', (math.ceil(Qk*10))/10, nb)

nk = kamgr*0.001/(Qk*y)
nk = idb('nk', 'Число ковшей, погружаемых в самосвал, шт', math.ceil( nk ), nb)

ce = idb( 'ce', 'Продолжительность цикла экскаватора при погрузке, сек', 25, db )
nc = idb( 'nc', 'Число циклов экскаваций в минуту, шт', 60/ce, nb )

tps = nk/nc 
tps = idb( 'tps', 'Время погрузки одного самосвала, мин', (math.ceil(tps*10))/10,nb )

tup = idb('tup', 'Время установки автосамосвала под загрузку, мин', 0.3, db )

Hb = (tsm-tpz-tln)*Qk*nk/(tps+tup) # ; z(Hb)
Hb = idb( 'Hb','Норма выработки \
(производ-сть) экскаватора в смену, куб.м/смена',round(Hb), nb )

zlocdb(nb, ['tsm'])
zlocdb(db, ['tpz', 'tln', 'kamgr','y' ])
zlocdb(nb, ['Qk', 'nk' ])
zlocdb(db, ['ce'] )
zlocdb(nb, ['nc', 'tps' ] )
zlocdb(db, ['tup'] )

z('\nПроверим формулу Нв из отчета:')
z('( {0}-{1}-{2} ) * {3} * {4} / ( {5} + {6} ) = {7}'\
  .format(tsm,tpz,tln,Qk,nk,tps,tup,Hb) )
zlocdb(nb, ['Hb'] )

z('\nДоисправить данный пункт в отчете.')

z('\nРассчет производительности погрузчика ZW220 \
при производстве горных работ выполнен в соответствии НТП.-------------')

z('\nДанные для таблицы 13 - теххарактеристики погрузчика')
pog = idb('pog','Марка погрузчика','ZW220',db )
poggr = idb('poggr','Грузоподъемность погрузчика, кг',6120,db)
pogV = idb( 'pogV', 'Вместимость ковша погр(ISO до краев)., куб.м.', 2.6, db )
pogrk =idb( 'pogrk', 'Ширина режущей кромки ковша погр., мм', 2910, db )
# наибольш. высота разгрузки ковша погр. Hrp=2.88 иниц. ранее,db
pogw = idb('pogw', 'Мощность двигателя погр., кВт', 164, db )
poguc = idb( 'poguc', 'Наибольшее усилие черпания погр., кН', 169, db )
pogv = idb( 'pogv', 'Наибольшая скорость движения погр.,км/час', 34.5, db )
# радиус поворота погрузчика Rp. инициировали ранее db
pogm = idb('pogm', 'Масса погрузчика, кг', 17250, db )

zlocdb(db, ['pog', 'poggr', 'pogV', 'pogrk', 'Hrp', \
            'pogw', 'poguc', 'pogv', 'Rp', 'pogm'] )

pogK = idb( 'pogK', 'Коэффициент наполнения ковша погр.',1.0, db )
pogKb = idb( 'pogKb', 'Коэффициент использования погр. во времени', 0.8, db )
pogKc = idb( 'pogKc', 'Коэффициент использования погр. \
по организационным условиям', 0.8, db )

z('\nТеперь данные для рассчета:\nРабота погр. при разр.и погрузке на авт-рт')
zlocdb(db,['ps', 'pogV', 'pogK', 'Kr', 'pogKb', 'pogKc'] )

z('\nДля рассчета продолжит. цикла tc :')

tn = idb('tn', 'Время наполнения ковша погр.породой, с' , 12 , db )
tgr = idb( 'tgr', 'Время движения погрузчика к месту разгрузки,с', 15, db )
tr = idb('tr', 'Время разгрузки погрузчика, с', 2, db )
tp = idb('tp', 'Время возвращения погрузчика в забой,с', 15, db )
ts = idb('ts', 'Время переключения передач погрузчика,с', 12, db )

z('\nПроверяем расчет Тцикла tc')
tc = tn + tgr + tr + tp + ts
tc = idb('tc', 'Продолжительность цикла погрузчика,с', tc, nb )
z('Тцикла = {} + {} + {} + {} + {} = {}'.format(tn,  tgr,  tr, tp ,ts, tc))

z('\nСчитаем Производительность погрузчика в смену Hbp:')
Hbp = (ps*3600)/tc*pogV*pogK/Kr*pogKb*pogKc
Hbp = idb( 'Hbp', 'Прозводительность (норма выработки) \
погрузчика в смену, куб.м/смена', round(Hbp), nb ) ; zlocdb(nb,['Hbp'])
z('Проверка формулы:\n\
Hbp = ({}*3600)/{} * {} * {}/{} * {} * {} = {}'\
.format(ps,tc,pogV,pogK,Kr,pogKb,pogKc,Hbp))
z('\nИзменить этот пункт в отчете.')

z('\nБульдозер на вскрышных и вспомогательных работах-------------------------')
z('Данные для таблицы 14: ')

bul = idb( 'bul', 'Марка бульдозера', 'D180LT', db )
bulw = idb( 'bulw', 'Мощность бульдозера, кВт', 145, db )
bultk = idb( 'bultk', 'Тяговые класс/ усилие бульдозера, класс/кН', '13/290',db)
bullo = idb( 'bullo', 'Ширина отвала бульдозера, мм', 3460, db )
bulho = idb( 'bulho', 'Высота отвала бульдозера, мм', 1450, db )
bulup = idb( 'bulup', 'Подъем отвала бульдозера, мм', 1100, db )
buldn = idb( 'buldn', 'Опускание отвала бульдозера , мм', 480, db )
bulm = idb( 'bulm', 'Масса бульдозера, кг', 20530, db )
bulk = idb( 'bulk', 'Колея бульдозера, мм', 1900, db )
bulv = idb( 'bulv', 'Максимальная скорость движения бульдозера, м/с', 3, db )

zlocdb(db, [ 'bul' , 'bulw', 'bultk', 'bullo', \
            'bulho', 'bulup', 'buldn', 'bulm', 'bulk', 'bulv' ] )
z('Изменить это  в отчете')

z('\nСменная производительность бульдозера на планировочных \
работах внутри карьера--------------------------------------------------------')

bulkn = idb( 'bulkn', 'Коэффициент использования бульдозера по времени',0.8, db)
bultp = ( lphb + Sop ) * bulv 
bultp = idb( 'bultp', 'Время одного прохода бульдозера, с', round( bultp ), nb )
bultr =  ( lphb  ) * bulv 
bultr = idb( 'bultr', 'Время обратного хода бульдозера, с', round( bultr ) , nb)
bulnpr = idb( 'bulnpr', 'Число проходов по одному месту', 4 , nb )

zlocdb(db, [ 'ps' , 'bullo' , 'lphb' , 'bulkn'] )
zlocdb(nb, [ 'bultp' , 'bultr' , 'bulnpr' ] )

Pbpl = ( 3600 * ps * bullo/1000  * lphb * bulkn ) / ( ( bultp + bultr ) *bulnpr)
Pbpl = idb( 'Pbpl', 'Сменная прозводительность бульдозера \
на планировочных работах, кв.м.', round( Pbpl ), nb )
zlocdb(nb, ['Pbpl'])
z('Исправить цифры в формуле и сам абзац тоже')

z('\nСменная производительность бульдозера  при разработке \
и перемещении грунта ---------------------------------------------------------')

zlocdb(db, [ 'ps' ] )
z('Считаем V  - объем грунта в разрыхленном состоянии, \
перемещаемый отвалом бульдозера, м3------------------------------')
zlocdb(db, [ 'bullo', 'bulho' , 'ueo' ] ) # ширина, высота отвала, угол песка
z('сначала Считаем a (sppg)- ширина призмы перемещаемого грунта-----')
sppg = bulho*0.001/math.tan(math.radians(ueo))
sppg = idb( 'sppg' , 'Ширина призмы перемещаемого грунта, м', round(sppg,2),nb)
zlocdb(nb, [ 'sppg' ] )
z('Считаем  в цифрах V  - объем грунта в разрыхленном состоянии, \
перемещаемый отвалом бульдозера, м3  со значениями:')

Vr = bullo*0.001*bulho*0.001*sppg*0.5  
Vr = idb( 'Vr', 'Объем грунта в разрыхленном состоянии, \
перемещаемый отвалом бульдозера, м3', round(Vr,1) , nb )
z( ' Vr = ( {} * {} * {} ) / 2 = {}'.format( bullo, bulho, sppg, Vr) )

Ky = idb('Ky', 'Коэффициент, учитывающий уклон местности \
на участве работ (приложение V НТП).', 1.0, db)
Ko = idb('Ko', 'Коэффициент, учитывающий увеличение производительности \
при работе бульдозера с открылками. Для этого типа бульдозера Ко = 1,0.',1.0,db)
zlocdb(db, ['Ky' , 'Ko' ] )

z('Считаем Коэффициент, учитывающий потери при её транспортировке:')

zlocdb(db,['lphb'])
B = idb( 'B', 'для вскрыши – коэффициент потерь на 1 м пути \
транспортировки;',0.006, db)

z('Коэффициент, учитывающий потери при её транспортировке:')
Kpg = 1 - lphb * B ; 
Kpg = idb( 'Kpg', 'Коэффициент, учитывающий потери \
при её транспортировке', round(Kpg,2) , nb )

zlocdb(db, ['B'])
zlocdb(nb, ['Kpg'])
z('для Кп цифры в формуле те же')

Ki = idb('Ki', 'коэффициент использования бульдозера во времени', 0.8, db )
Krg = idb('Krg', 'Коэффициент разрыхления грунта (табл.IV.1 НТП ', 1.2, db )
z('\nДля Продолжительность одного цикла (в секундах):')
lpr = idb('lpr', 'Длина пути резания бульдозера,м', 5, db )
v1 = idb('v1', 'скорость движения бульдозера при резании, м/с', 0.9, db )
zlocdb(db,[ 'Ki', 'Krg', 'lpr', 'v1', 'lphb'])

v2= idb('v2', 'Скорость движения бульдозера с грунтом, м/с', 1.2, db )
v3=idb( 'v3', 'Скорость холостого ( обратного) хода, м/с', 1.6, db )
tnb = idb('tnb', 'Время переключения скоростей, сек', 9, db )
tpb = idb('tpb', 'Время разворота бульдозера, сек', 10, db )
to = idb('to', 'Время опускания отвала, сек', 2.5, db )
zlocdb(db,['v2', 'v3', 'tnb', 'tpb', 'to' ] )

z('\nСчитаем Тц Продолжительность одного цикла (в секундах):')

Tc = lpr/v1 + lphb/v2 + (lpr+lphb)/v3 + tnb +2*tpb + to 
Tc = idb( 'Tc', 'Продолжительность одного цикла бульдозера, сек', round(Tc), nb)
zlocdb(nb, ['Tc'])
z('Тц = {}/{} + {}/{} + ({} + {})/{} + {} + 2*{} + {} = {}'\
  .format( lpr, v1, lphb, v2, lpr, lphb, v3, tnb, tpb, to, Tc  ))

z('\nСчитаем Пс Сменная производительность бульдозера:')
Ps = (3600 * ps * Vr * Ky * Ko * Kpg * Ki) / ( Krg * Tc ) 
Ps = idb( 'Ps','Сменная производительность бульдозера, м3/смена', round(Ps), nb)
z('Пс = ( 3600 * {} * {} * {} * {} * {} * {} ) / ( {} * {} ) = {}'\
  .format( ps, Vr, Ky, Ko, Kpg, Ki, Krg, Tc, Ps )  )

z('\nВ проекте не изменял, исправить,  что не так')

z('\nТаблицу 15 - Перечень техники - изменить на наши марки!!!!----------')

#--------------------------------------3.6 Общая схема работ-------------
print('--------------------------------3.6 Общая схема работ-------------')
#Площади добычи помесячно : 
setal=4355.5 # 34844 кв.м./8мес
s=[0 for _ in range(9)]  # площади добычных месяцев
s[1] = 4360
s[2] = 4340
s[3] = 4340 #было 4368, отняли 28
s[4] = 4350
s[5] = 4350
s[6] = 4352
s[7] = 4352
s[8] = 4356 # было 4372, отняли 16

f=[0 for _ in range(9)]  # фронт работ
f[1]=109
f[2]=155
f[3]=155 #было 156
f[4]=150
f[5]=145
f[6]=136
f[7]=136
f[8]=99 # было 93

p=[0 for _ in range(9)]  # подвигание
p[1]=40
p[2]=28
p[3]=28
p[4]=29
p[5]=30
p[6]=32
p[7]=32
p[8]=44 # было 47
   
mt=1.54 # средняя мощность толщи песка в целике (отчет по подсчетам)

vc=[0 for _ in range(9)]  # объем песка в целике
for _ in range(9):
    vc[_]=s[_]*mt

#площади стихийных выработок
mv = [0 for _ in range(4)] # мощности их, нулевой нет
sv = [0 for _ in range(4)] # площади стих. выр. ,нулевая-пустая, её нет.
sv[1] = [0 for _ in range(4)] # площади нижней левой (1й) выработки
sv[1][0]=948.9
sv[1][1]=910.0
sv[1][2]=975.8
sv[1][3]=472.3
mv[1]=1.25

sv[2] = [0 for _ in range(3)]  # площади верхней  (2й) выработки
sv[2][0]=36.9
sv[2][1]=648.5
sv[2][2]=101.6
mv[2]=1.03

# 2 - чтоб создался массив, площади нижней правой (3й) выработки
sv[3]=[0 for _ in range (2)] 
sv[3][0]=756
mv[3]=1.68

# объемы стихийного песка(помесячно : )
vr=[0 for _ in range(9)]
# объемы стихийного песка(по выработкам N1,2,3 :)
vv=[0 for _ in range(4)]

##print('\nOбъемы стихийного песка(помесячно): ')
vr[1]=round(sv[2][0]*mv[2])+round(sv[3][0]*mv[3])
##print('1st month верх(2я выр),  низ(3я выр) =', round(sv[2][0]*mv[2]), round(sv[3][0]*mv[3] ) )
vr[2]=round( sv[2][1]*mv[2] )
##print('2nd верх(2я выр) =', vr[2] )
vr[3]=round( sv[2][2]*mv[2] )
##print('3d верх(2я выр) =', vr[3] )
vv[2]=[ round( sv[2][0]*mv[2] ),  vr[2] , vr[3] ]
vv[3]=[ round( sv[3][0]*mv[3] ) ]

vr[4]=round( sv[1][0]*mv[1] )
##print('4th низ(1я выр) =', vr[4] )  
vr[5]=round( sv[1][1]*mv[1] )
##print('5th низ(1я выр) =', vr[5] )
vr[6]=round( sv[1][2]*mv[1] )
##print('6th низ(1я выр) =', vr[6] )  
vr[7]=round( sv[1][3]*mv[1] )
##print('7th низ(1я выр) =', vr[7] )
vv[1]=[ vr[4] , vr[5] , vr[6] ,  vr[7]  ]

print('Суммы стихийных объемов песка  по месяцам: ')
print(sum( vr ))
print('Суммы стихийных объемов песка  по выработкам 1 2 3: ')
__=0
for _ in range( 1, len( vv ) ) :
    print(_, '  выр  ',sum( vv[_] ))
    __+= sum( vv[_] )
print('Общий объем стих. песков в 3х выработках= ', __)
print('Совпадает')

# объемы песка , годного к добыче по месяцам :
print(' Создаем массив оставшихся истиных объемов песка vp : ')
vp=[ 0 for _ in range( 9 ) ]
for _ in range( 9 ) :
    vp[ _ ] = round( vc[ _ ] - vr[ _ ] )
##    print(_,  vp[ _ ]  , sep = '      ')
print('Всего оставшийся объем песка: ', sum(vp))
vp = idb('vp','Массив оставшихся истиных объемов песка помесячно', vp ,nb)
print('\nСоздаем таблицу 16 - календ. план вскрышных работ')
print('Массив площади вскрыши vs помесячно : ')
vs=[ 0 for e in range(3) ] # сoзд. массив площади вскрыши vs помесячно
vs[1]= sum( s[1:4] ) - sum( sv[2] ) -sum( sv[3] ) +3 # чуть подкорректировал
vs[2] = sum( s[4:] ) - sum( sv[1] ) -3
for _ in range(1,3):
    print( _ , vs[ _ ] , sep=' '*5)
print('SumS: ', sum( vs ) )

vprs=[ 0 for e in range(3) ] # сoзд. массив объема вскрыши vprs помесячно
mvs=0.090 # мощность вскрыши средняя
vprs= [  jround(x*mvs)  for x in vs ]
print('\nМассив объема  vprs оставшейся вскрыши помесячно: ')
for _ in range(1,3):
    print( _ , vprs[ _ ] , sep=' '*5)
print('Vol: ', sum( vprs ) )

print( '\nСоздадим массивы фронта и подвигания вскрыши: '  )
vfr = [ 0, 125, 123 ] # длина фронт вскрыши
vpod = [ 0, 92, 150 ] # подвигание вскрыши

print('Сама таблица 16 : ')
print('      Месяц   Мощн    Площадь   Фронт   Подвиг   Об.Р. всего    в т.ч. ПРС')
for i in range(1,3):
    print(' ', i, mvs, vs[i], vfr[i], vpod[i], vprs[i], vprs[ i ] , sep=' '*10 )
print( 'Всего :  ', mvs, sum( vs ), sum( vfr )/(len(vfr)-1) , sum(vpod),  \
      sum( vprs ), sum(vprs) , sep=' '*9)
print('Все совпадает с проектом подсчета. Заполнить эту табл.16')

print('\nСоздаем таблицу 17 - календ. план добычных работ')
print('Месяц  Мощн   Площадь  Фронт  Подвиг  Об.в.цел  Ранее отр.об.  ОбъемРабот')
for i in range(1,9):
    print( i, mt, s[i], f[i], p[i], round(vc[i]), vr[i], 
          vp[i], sep=' '*12 )
print( 'Всего табл.17:  ', sum( s ),  ' '*42  , round(sum( vc )),' '*11, \
      round( sum( vr ) ), ' '*10, round( sum( vp ) ) )
print('Все совпадает с проектом подсчета. Заполнить эту табл.17')
print('Весь пункт описан в тексте--3.6 Общая схема работ-Заполнить толко таблицы!')
 
w_days = idb('w_days', 'Кол-во нужных раб. дней для экскавации всего песка',\
             math.ceil(bz/Hb), nb)
zloc('w_days')

#-- Переменные отсюда не все внесены в общие словари переменных------
z('''
#==================================================
#                              4. Отвальное хозяйство
#==================================================
''')

print('''
#==================================================
#                      4.1 Общая характеристика отвальных работ
#==================================================
''')

ukR = idb('ukR', 'Уклон рекультивации бортов, отношение 1:x', [1, 5], db)
uklon=math.atan(ukR[0]/ukR[1])*180/math.pi
uklon=idb('uklon', 'Уклон выполаживаемого борта в градусах', uklon,nb)
z('Приняты такие углы выполаживания бортов:')
zlocdb(db,['ukR'])
zlocdb(nb,['uklon'])

z('Объем снимаемого слоя ПРС на площади {} га  составит {} куб.м.'\
.format(  round(go/10**4,2) , sum(vprs)  ))

skv = idb('skv', 'Скважины и их мощности',\
{1: (0.1,1.7), 2:(0.1,1.5) , 3:( 0.05, 2.75 ) , 4: ( 0.2, 0.5 ), '4a': (0.0 , 1.4) , 5:( 0.2, 1.6) , 6:(0.0,1.3)}, db)

Sb={}  # создал словарь площадей поперечного сечения нерабочих бортов на углах
for key in skv: 
    Sb[key] = sum(skv[key])**2/(2*math.tan(math.radians(ueo)))
Sb = idb('Sb', 'Площади поперечных сечений нерабочих бортов на углах',Sb,nb)

# создал словарь длин сторон периметра
Lp=idb('Lp', 'Длины сторон периметра, м', \
{ (1, 4) : 149.68 ,     # 1
  (4, '4a') : 77.35 ,   # 2
  ('4a', 2) : 77.35 ,     # 3
  (2, 6) : 81.92 ,       # 4
  (6, 3) : 93.81 ,       # 5
  (3, 5) : 113.52 ,     #6
  (5, 1) : 188.86       #7
  }, db )

Evn={}  # пустой словарь Объемы песка в уже нерабочих бортах
for key in Lp:
    Evn[key] = Lp[key] * ( Sb[ key[0] ] + Sb[ key[1] ] ) / 2
Evn=idb('Evn','Объемы песка в уже нерабочих бортах', Evn, nb )

print('Объемы песка в нерабочих бортах после выемки ',\
      round(ValSum(Evn),1) )  # Общий объем песка в нерабочих бортах

Sv={}
# создал словарь дополнительных площадей сечений выполаживаемых бортов на углах
for key in skv: 
    Sv[key] = ( sum(skv[key])**2*ukR[1]/2 ) - Sb[key]
Sv = idb('Sv', 'Площади дополнительных поперечных сечений выполаживаемых \
бортов на углах',Sv,nb)

Evv = {} # словарь объемов дополнительного грунта в выполаживаемых бортах
for key in Lp:
    Evv[key] = Lp[key] * ( Sv[key[0]] + Sv[key[1]] ) / 2
print('Объемы дополнителного грунта в выполаживаемых бортах ',\
      round(ValSum(Evv),1) )  # Общий объем дополнит. грунта в выполаживаемых бортах
Evv = idb('Evv','Cловарь объемов дополнительного грунта \
          в выполаживаемых бортах',Evv, nb )

E1=idb('E1','Объем оставшегося песка в нерабочих бортах',\
       round(ValSum(Evn)),nb)
E2=idb('E2','Объем дополнительного грунта в выполаживаемых бортах',\
       round(ValSum(Evv)),nb)
zlocdb(nb,['E1','E2'])  
Hprs=idb('Hprs','Мощность наносимого слоя ПРС для рекультивации,м',\
         0.2, db)  
Vprs=idb('Vprs','Объем всего нужного ПРС для рекультивации',\
         round(Hprs*go),nb)
z('При мощности наносимого слоя ПРС {} объем его составит {} '\
  .format(Hprs,Vprs))
z('Дефицит ПРС составит {} - {} = {}'.\
  format(Vprs,sum(vprs), Vprs - sum(vprs) ))

vs=idb('vs','Площади  периодов вскрыши ,кв.м',vs,nb)
mvs=idb('mvs','Мощность вскрыши средняя по участку, м',mvs,nb)
vprs=idb('vprs','Объемы оставшейся вскрыши ' , vprs , nb )
vfr=idb('vfr', 'Фронты работ вкрышных месяцев, м' , vfr , nb )
vpod=idb('vpod', 'Подвигание вскрышных месяцев, м' , vpod , nb )
z('Доввел в базу данных рассчитанные для т.16 Календ план вскр переменные')
zlocdb(nb, [ 'vs', 'mvs', 'vprs', 'vfr','vpod' ])

print('''
 #======================================================
 #                    4.2. Устойчивость отвалов
 #======================================================
      ''')
print('Принятый угол откоса выположенных бортов, градусы', round(uklon))
print('Остальное исправлено   в теле проекта')
 
print('''
 #======================================================
 #        4.3. Способ отвалообразования. Механизация отвальных работ
 #======================================================
      ''') 

z('Изменить систему разработки  в начале на (по Е.Ф.Шишко) - В-7 - \
  с комбинированным перемещением породы в отвалы (С частичным перемещением\
  вскрышных пород при помощи транспортных средств во внутренние или внешние отвалы.')

z('Все исправлено в тексте. Больше ничего.')
print('''
 #======================================================
 # 4.4. Порядок отсыпки отвалов. Календарный план отвальных работ
 #======================================================
      ''') 
z('''
  Разработка карьера производится с одним видом отвалообразования, \
внутренним: Далее в тексте исправлено.
    ''')
Voo = Vprs+E2
Voo =idb( 'Voo','Общий объем отвалообразования, куб.м.' , Voo , nb )
zlocdb( nb, ['Voo'])
z('Объем снимаемого слоя ПРС на площади {} га  составит {} куб.м.'\
.format(  round(go/10**4,2) , sum(vprs)  ))
z('Дефицит грунта для формирования(выполаживания откосов бортов куб м', E2) 
z('Дефицит ПРС составит {} - {} = {}'.\
  format(Vprs,sum(vprs), Vprs - sum(vprs) ))
z('Сумма объемов сошлась. Обговорить это в пункте проекта')
Sdopg = idb('Sdopg','Площадь для снятия дополнит. грунта(опред граф.)',27352,nb)
z('При уклоне {} выполаживаемых откосов площадь снятия дополнительного грунта \
  для выполаживания бортов составит {} кв м'.format(ukR,Sdopg))
Hdopg = E2 / Sdopg
Hdopg = idb('Hdopg','Мощность снятия доп \
    слоя грунта из подошвы, м ',round(Hdopg,1),nb)
zlocdb( nb, [ 'Hdopg' ])
z('При формировании - выполаживании бортов бульдозером снимается слой \
  грунты подошвы выработанного пространства {} , котрое потом засыпается \
  слоем ПРС {} м'.format(Hdopg, 0.2))
z('Недостающий объем ПРС  завозится из внешних источников \
  и выгружается сразу на выположенные отокосы без образования отвалов. \
  Начало работ по отсыпке бортов слоем ПРС - июнь 2018.'.format( Vprs - sum(vprs)))
z('Соответственно объем внутреннего отвала будет состоять только \
  из снятого слоя ПРС и составит ', sum(vprs))
z('Все остальные отвальные работы производятся в процессе подвигания \
  забоя и не требуют дополнительного отвалообразования')
Hvo=idb('Hvo','Высота внутреннего формируемого отвала',2.5,db)
zlocdb( db, [ 'Hvo' ])
Svo=idb('Svo','Площади внутренних формируемых \
   отвалов ПРС', [x/Hvo for x in vprs],nb)
zlocdb( nb, [ 'Svo' ])
z('Для табл 19 - Календарн план отвалообразования:')
z('Период работы ! Слой зачистки ! Отсыпка внутренних отвалов !  Итого,куб м')
z('         Площадь  Мощн  Объем(итого)     Площадь(итого)   Высота отвала  Объем(итого) ')
for _ in range(1,3):
    z(' '*3,vs[_], mvs, vprs[_], Svo[_], Hvo, vprs[_],sep=' '*5)

z('В итого сложить все по столбцам')

z('''
 #======================================================
 #        4.5 Отвальное оборудование
 #======================================================
      \n Вписать наши 1экс,погр 2автосамосв 3бульд''') 

z('''
 #======================================================
 #        5. Карьерный автотранспорт
 #======================================================
  ''') 

z('для автосамосвала :')
zlocdb( db, [ 'kamgr' ])
z('До этого момента все распечатано')


z('\nДля таблицы 20 - Транспортировка горной массы')
z('        Не будет 5й колонки.\n')

#---------подготовка нужных переменных и расчет-----
Nrd = idb( 'Nrd', 'Количество рабочих дней в году',[4, jround(w_days/8*6)] , nb ) # 0-ПРС,1-песок
Vgodv =idb( 'Vgodv','Годовой объем перевозок в куб.м' ,[2696, 35532], nb ) # 0-ПРС,1-песок
Y = idb('Y', 'Объемный вес в целике ПРС , песок, т/куб.м', [ 1.2, y] , db)
Vgodm = idb( 'Vgodm','Годовой объем перевозок в т.' ,\
            [ jround( Vgodv[_]*Y[_] ) for _ in range(2)], nb ) # 0-ПРС,1-песок  
ncm = idb('ncm','Количество смен в сутки', 1, db )
Vcm = idb('Vcm', 'Сменный показатель, тонн', \
          [ round( Vgodm[_]/Nrd[_] , 1 ) for _ in range(2)], nb )
Vcyt = idb('Vcyt', 'Суточный показатель, тонн', \
           [ Vcm[_]*ncm for _ in range(2) ], nb )
Ea = idb('Ea', 'Геометрическая вместимость Объем кузова а/с', kamvk, db )
kp = idb('kp', 'Коэффициенты разрыхления ПРС, песка', [ Krg, Kr ], db)
qap = idb('qap', 'Грузоподъемность а/с для (внутр?) рассчета,т',\
          [ Ea*Y[_]/kp[_] for _ in range(2) ] , nb)
L = idb('L', 'Расстояние перевозки ПРС, песка', [ 0.15, 1 ], db )
Vcp = idb('Vcp', 'Средняя скорость км/ч движения а/с при перевозке ПРС, песка', [45,15],db)
tdv = idb('tdv', 'Время движения в оба конца, мин', \
          [ ( L[_]*60/Vcp[_] ) * 2 for _ in range(2) ], nb )
# + tps - время погрузки а/с, мин, 5.9 nb
tpa3 = idb('tpa3', 'Время разгрузки а/с, мин', 3 , db)
tm = idb('tm', 'Время на маневры и ожидание а/с, мин', 5, db ) 
Tp = idb('Tp', 'Время одного рейса а/с, мин', \
         [ tdv[_] + tps + tpa3 + tm for _ in range(2) ], nb )
np = idb('np', 'Количество рейсов (в смену?) а/с', \
         [ math.ceil( 480/Tp[_] ) for _ in range(2) ], nb)
Qcm = idb('Qcm', 'Сменная производительность а/с, тонн', \
          [ round( ( np[_] * qap[_] * 0.8), 1 ) for _ in range(2) ], nb)
Np = idb('Np', 'Потребное количество автосамосвалов(в смену?)', \
         [ jround( Vcm[_] / Qcm[_] ) for _ in range(2) ] , nb )
ktr = idb('ktr', 'Коэффициент технической готовности парка', [0.94, 0.94], db )
Nu = idb('Nu','Инвентарный парк автомобилей(нужный?), шт', \
         [ jround( Np[_]/ktr[_] ) for _ in range(2) ], nb )
qa = idb('qa', 'Грузоподъемность машины (а/с), в тоннах', kamgr/1000, db)
Ku = idb('Ku', 'Коэффициент использования парка автомобилей', 1, db)
Lgod = idb('Lgod', 'Годовой пробег 1 а/с, км', \
           [ jround( ( L[_] * Nrd[_] * ncm * 2 * np[_] ) / Ku ) for _ in range(2) ], nb )

z('\nПечатаем таблицу 20 - Трансп горн массы:\n \
  Показатель  Формулу вручную прописать     ПРС    Песок \n')
zloc('Nrd', 'Vgodv', 'Y','Vgodm', 'ncm', 'Vcyt', 'Vcm', 'qap', \
     'L', 'Vcp', 'tdv', 'tps', 'tpa3', 'tm', 'Tp', 'np', 'Qcm', \
     'Np', 'Nu', 'ktr', 'kp', 'qa', 'Ea', 'Lgod', 'Ku')
z('\nДоисправить в тексте оставшиеся уточнения. ')

z('''
# =========================================================
#            Автомобильные дороги
# =========================================================
''')
z('\n Этот пункт без изменений. Таблицу 21,22 оставить,как есть. \
  Далее идет табл 23 расход матер')
z('\nВид работ              Горные работы                       Итого\n\
  Механихмы      Экскаватор    Бульдозер     Автосамосвал\n\
  Единицы измер.  Тыс.часов    Тыс. часов      Тыс. км')

KE = idb ('KE', \
  'Кол-во ед.техн', [1,1,Np], nb)
Lsgp = idb('Lsgp', \
'Средн.год.пробег', [ Nrd[1]*ps/1000, 4*ps/1000, Lgod[1]*Np[1]/1000 ], nb)
Rd = idb('Rd', \
'Норма рсхд диз.', [ 13.8*1000, 13.81*1000, 0 ], db)
Rb = idb('Rb', \
'Норма рсхд бенз.', [ 0, 0, 35.6*10 ], db)
Rs = idb('Rs', \
'Норма рсхд смазчн.', [ 1.36, 1.36, 5.50 ], db)
Ro = idb('Ro', \
'Норма р-д обтирчн.', [ 0.08, 0.08, 0.10 ], db)

zloc( 'Lsgp', 'Rd', 'Rb', 'Rs', 'Ro')
 
Rgd, Rgb, Rgs, Rgo = \
[ [ round( Lsgp[_]*X[_], 2 ) for _ in range(3) ] for X in (Rd, Rb, Rs, Ro) ]

Rgd = idb('Rgd', 'Год.расх. диз.', Rgd, nb)
Rgb = idb('Rgb', 'Год.расх. бенз.', Rgb, nb)
Rgs = idb('Rgs', 'Год.расх. смазч.', Rgs, nb)
Rgo = idb('Rgo', 'Год.расх. обтир.', Rgo, nb)

zloc( 'Rgd', 'Rgb', 'Rgs', 'Rgo')
z('Для вертикального столбика Итого Годовых расходов справа:')
[ print(sum(X)) for X in (Rgd, Rgb, Rgs, Rgo) ]

z('Автошины - по одному комплеку.(норма -  1 кмплк на 40 тыс. км)\
  \n Общее количество автошин  : {} шт '.format(Np[1] ))

z('''
# ===========================================================
# 6. Техника безопасности при ведении горных работ
# ===========================================================
\n Unchangable''')

z('''
# ===========================================================
# Меры безопасности при работе погрузчика
# ===========================================================
\n  Погрузчик ZW220 изменить,  и все.''')

z('''
# ===========================================================
# Мероприятия против съезда в карьер
# ===========================================================
\n''')

z('не меняем')

z('''
# ============================================================
# Сообщение между уступами
# ============================================================
\n''')

z('''В основном не меняем.  уточнить , чтто вииду малой мощности\
  съезд может и не использоватьс''')

z('''
# ==============================================================
# 7. Осушение поля карьера
# ==============================================================
\n''')

z('Отсканировать рас 4 - схему съезда с уступа и вставить в отчет')

z('Рассчета не будет. Убрать его ооттуда. Сброс будет через мел\
  иоративную траншею. В подсчетах еще глянуть .')

z('''
# ==============================================================
# 8. Способы проветривания карьера
# ==============================================================
''')

z('Изменить на   наше название')

z('''
# =============================================================
# 9. Технологический комплекс на поверхности
9.1   unchanged
9.2   на месте
9.3 на месте
# =============================================================
''')

z('''
# =============================================================
# 10. Качество полезного ископаемого
10,1 радиация в норме ,использовать экспертн заключен
только для дорожн строительства
# =============================================================
''')

z('''
# ==============================================================
# 10.2. Требования потребителей к качеству товарной продукции
# ==============================================================
''')

z('''без изменений(и табл 24 тоже),  
  у нас  2 класс песка(это в конце. ))''')

z('''
# ==============================================================
# 10.3 Контроль качества добываемой продукции
внести данные из протокола эпидемиологов-радиологов
# ==============================================================
''')

z('''
# ==============================================================
# 11. Организация и технические решения при ведении работ в опасных зонах
# ==============================================================
\nunchanged''')

z(''')
# =================================================================
# 12. Управление производством, предприятием
# =================================================================
''')

z('Таблица 25 Штат карьера:\n\
  Кол-раб дней поставить {} . \n\
  Маркшейдера исправить тоже . Остальное оставить'.format(w_days))
state = idb('state', 'Штат карьера(посчитано в таблице 25)',14,nb)
zloc('state')
z('вместо автодора -мы.')

z('''
# ==================================================================
# 13. Архитектурно-строительные решения
# ==================================================================
\nИсходные данные - оставить.13,2 - площ по дну составит {} .'''\
.format(Sdopg))
z('13.3 - оставить. ')

z('''
# ===================================================================
# 14. Инженерно-техническое обеспечение. Сети и системы
# ===================================================================
\n14.1 Система электроснабжения''')
zloc('Nrd')
z('Убрать водоотлив.')
z('Провода ЛЭП, вагончик зазаемление, грозозащита как есть')
z('14.2 \n14.2.Освещение карьера и района работ - без изменений')

z('''
# ===================================================================
# 14.3. Система водоснабжения
# ===================================================================
''')
zloc('state')
z(5*state, '-Кол-во воды по 5 л на чела.')

z('''
# ===================================================================
# 14.4. Система водоотведения и канализации
# ===================================================================

Водоотведение из карьера - ничего

Канализация - ничего

14.5. Связь и сигнализация - оставить
''')

z('''
# ===================================================================
# 15. Генеральный план и внешний транспорт
# ===================================================================

 год объем добычи -  {} ,\n, 
 производится в течении 8  мес -сент2017-окт18.
 Остальное по ходу корректировать .
'''.format(Vgodv[1]))

z('''
# =====================================================================
# 16. Организация строительства
# =====================================================================
  
16,1 Осн виды и объемы---------------------------------

Объем вскрышных по слою почвы {0} .
Ps : Сменная производительность бульдозера, м3/смена  {1}        
что значит слой зачистки и слой почвы ??

16.2. Способ осуществления строительства--------------

согласно тз  - год проtкт лиц {2}
,а принятый нами годовой объем - {3}
Общ объем запасов с учетом потерь -
соответств срок службы карьера - 8 месяц, это  с учетом ведени рекультиваци.

16.4. Производство работ в зимнее время

оставить.
'''.format(sum(vprs), Ps, gpk, Vgodv[1]))

z('''
# =======================================================================
# 17. Охрана недр и окружающей среды)
# =======================================================================

  17.1. Охрана и рациональное использование недр----------------
  
  Срок выполнения детальной маркшейдерской съемки согласно 
  межотраслевой инструкции для карьеров строительного материала 
  общего пользования регламентирует: не реже двух раз в год.
  
  17.1.1. Обоснование границ горного отвода,-------------------
  
  исправляем наши данные до таблицы 28. Каталог координат.
  вставить таблицу со с. 5  проекта подсчета запасов
  
  Защита от шума------------------------------------------------
  
  не меняем,уточнить положение участка. 
  рис.5 график отсканировать и вставить
  
  Санитарно-защитные зоны карьера-------------------------------
  
  не меняем, кроме последний абзац -
  СанПиН 2.2.1/2.1.1.1200-03 - 4й класс
''')

z('''
# ========================================================================
# 17.1.2. Расчет потерь и разубоживания полезного ископаемого
# ========================================================================

перед таблицей 29 - изменить наш угол и мощность

Таблица 29 :
    
№№   Расположение борта  Площадь поперечного  Протяженность  Объем потерь
     (между скважинами)    сечения, кв.м.       борта, мв    борту, куб.м.
''')
   
for _ in Lp:
    z(_, round( ( Sb[_[0]]+Sb[_[1]] )/2, 3) , Lp[_],round(Evn[_],3),sep=' '*7)
zloc('E1')

z('''Группа 2 потери для предотвращения разубоживания:
    
    Слой зачистки оставим 0.1 сверху и снизу. На площадь 3,48 га потери составят
    0,1*34800=3480 куб.м. в кровле и  0,1*34800=3480 куб.м. в подошве
    
    Далее - транспортные потери. прнимаем 0,4%'. Учитываем их в годовой
    производительности: 
        Тут нужно умножать коэффициент на промышл/извлекаемые запасы:
            38981*0,004=156 куб.м1
        35532*0,4/100=142 куб.м
        Год произв  с учетом ... ... составит 35532+142 = 35674 куб.
        
    Считаем объем извлекаемых запасв:
    Общий объем потерь составит''')
Vgod_pr = idb ('Vgod_pr', 'Годовая производительность карьера с учетом трансп.потерь',\
      jround( Vgodv[1] + Vgodv[1]*0.4/100 ), nb )

#  Общий объем потерь-----------------------
Vpot_krov=idb('Vpot_krov','Потери кровли, куб.м',0.1*34800,nb)
Vpot_podosh=idb('Vpot_podosh','Потери подошвы, куб.м',0.1*34800,nb)
Vpot_bort=idb('Vpot_bort', 'Потери борта, куб.м', E1, nb)
Vpoter=idb('Vpoter','Общий объем потерь',jround(Vpot_krov+Vpot_podosh+Vpot_bort), nb)

#  Объем извлекаемых запсасов---------------
Vizvlek = idb('Vizvlek', 'Объем извлекаемых запасов, куб.м.', \
              bz - Vpoter, nb )
# Коэффициент извлечения запасов-----------
Kizvl = idb('Kizvl','', round( Vizvlek/bz, 2),  nb ) 
# Плановый процент потерь ------------------
PlanPP = idb('PlanPP', 'Плановый процент потерь' , round(Vpoter/bz*100,1), nb)

z(''' -------------------------------------------

Объем извлекаемых запасов = разведанные запасы - потери = 
{3} - {2} = {4} 
общ об пот = потери кровли + потери подошвы + потери борта  = 
{0} + {7} + {1} = {2} 
Коэфф извлеч запасов  =  извлекаемые / разведанные
{4} / {3} = {5}
Планов проц потерь = объем потерь / разведанн запас
{2} / {3} = {6}
'''\
.format( Vpot_krov, Vpot_bort, Vpoter, bz, Vizvlek, Kizvl, PlanPP, Vpot_podosh ))

z(''' Далее - Таблица 30 Показатели полноты извлечения ...........
  
№№    Показатели        Ед. Изм.    Количество        % потерь к разведанным
                                                        запасам
1          2               3                       4
--------------------------------------------------------------------------
1    Разведанные
     запасы               куб.м.        {0}
2    Процент потерь        %            {1}
3    Промышленные
     запасы               куб.м.        {2}
4    Коэффициент
     извлечения
     запасов                            {3}
5    Потери мин сырья:                  {4}               {1}
     в т.ч.:
         в кровле         куб.м         {5}               7.3
         в подошве        куб.м         {6}           уточнить эти три цифры 
         в бортах         куб.м         {7}                3.1
''' \
.format( bz, PlanPP, Vizvlek, Kizvl, Vpoter, Vpot_krov, Vpot_podosh, Vpot_bort  ))

Kvskr = idb('Kvskr','Коэффициент вскрыши', round( Vgodv[0]/bz, 3), nb)
    
z('''Таблица 31 - Горнотехнические показатели добычи\n
№№         Наименование показателя          Ед.изм.      Значение показ.
1         Площадь уточн грн отвода           га              3,48
2         Средн млшн вскрышных пород          м              0,09
3         Средн мощн полезн толщ              м              1,54
4         Промышленные запасы                 куб.м.         {0}
5         Годов добыча                        куб.м          {1}
6         Год доб с учетом трансп потерь      куб.м.         {2}
7         Проц плановых потерь                 %             {3}
8         Коэфф извлечени запасов                            {4}
9         Коэфф вскрыши                                      {5}
'''\
.format(Vizvlek, Vgodv[1], Vgod_pr, PlanPP, Kizvl, Kvskr))

z('''
# ==================================================================
# 17.1.3. Мероприятия по обеспечению наиболее полного...
# ==================================================================

17,1,06 - Описание хода взять из пояснит по то-поработам. 
          Остальное по ходу.
''')

z('''
# ==================================================================
# 17.2. Мероприятия по охране окружающей среды
# ==================================================================

  Для:
  Таблица 33 Кал план рекультивации

''')

# создал словарь площадей возле сторон под отсыпку ПРС
Srec=idb('Srec', 'Словарь площадей возле сторон под ПРС, кв.м', \
{ (1, 4) : 901 ,     # 1
  (4, '4a') : 399.8 ,   # 2
  ('4a', 2) : 565.8 ,     # 3
  (2, 6) : 572.4 ,       # 4
  (6, 3) : 895.3 ,       # 5
  (3, 5) : 2049.5 ,     #6
  (5, 1) : 2064.1 ,     #7
  'dno' : 27352.1
  }, nb )
    
_= (2,6)
z('may18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)
_= (6,3)
z('june18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)
_= ('4a',2)
z('july18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)

z('august18',0,0,0,0,sep=' '*3)
_= (4,'4a')
z('sept18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)
_= (1,4)
z('okt18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)
_= (5,1)
z('okt18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)
_= (3,5)
z('okt18',_,Lp[_],round((Sv[_[0]]+Sv[_[1]])/2,3),round(Evv[_],1),sep=' '*3)

make_db_shelve(db,nb)
print('\nВ сложенных базах - {} + {}  = {}  строк '.format(len(db),len(nb), len(db)+len(nb)))

input('\npress any key..')